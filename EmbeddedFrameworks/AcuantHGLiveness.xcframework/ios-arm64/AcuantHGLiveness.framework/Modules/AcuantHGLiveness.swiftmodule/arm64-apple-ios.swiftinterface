// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name AcuantHGLiveness
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFoundation
import AcuantCommon
import Foundation
import Swift
import UIKit
import _Concurrency
import _StringProcessing
@objc @_inheritsConvenienceInitializers @objcMembers public class HGLiveness : ObjectiveC.NSObject {
  @objc public class func getFaceCaptureSession(delegate: AcuantHGLiveness.AcuantHGLiveFaceCaptureDelegate?, captureDevice: AVFoundation.AVCaptureDevice?) -> AcuantHGLiveness.FaceCaptureSession
  @objc override dynamic public init()
  @objc deinit
}
@objc public enum AcuantFaceType : Swift.Int {
  case NONE
  case FACE_TOO_CLOSE
  case FACE_MOVED
  case FACE_TOO_FAR
  case FACE_GOOD_DISTANCE
  case FACE_NOT_IN_FRAME
  case FACE_HAS_ANGLE
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc public protocol HGLivenessDelegate {
  @objc func liveFaceCaptured(result: AcuantHGLiveness.HGLivenessResult?)
}
@objc @_inheritsConvenienceInitializers @objcMembers public class FaceCaptureSession : AVFoundation.AVCaptureSession {
  @objc public class func getFaceCaptureSession(delegate: AcuantHGLiveness.AcuantHGLiveFaceCaptureDelegate?, captureDevice: AVFoundation.AVCaptureDevice?) -> AcuantHGLiveness.FaceCaptureSession
  @objc public func start(completion: (() -> Swift.Void)? = nil)
  @objc public func stop()
  @objc public func resume()
  @objc override dynamic public init()
  @objc deinit
}
extension AcuantHGLiveness.FaceCaptureSession : AVFoundation.AVCaptureMetadataOutputObjectsDelegate {
  @objc dynamic public func metadataOutput(_ output: AVFoundation.AVCaptureMetadataOutput, didOutput metadataObjects: [AVFoundation.AVMetadataObject], from connection: AVFoundation.AVCaptureConnection)
}
extension AcuantHGLiveness.FaceCaptureSession : AVFoundation.AVCaptureVideoDataOutputSampleBufferDelegate {
  @objc dynamic public func captureOutput(_ output: AVFoundation.AVCaptureOutput, didOutput sampleBuffer: CoreMedia.CMSampleBuffer, from connection: AVFoundation.AVCaptureConnection)
}
@objc @_inheritsConvenienceInitializers @objcMembers public class LiveFaceRectDetail : ObjectiveC.NSObject {
  @objc public var width: Swift.Float
  @objc public var height: Swift.Float
  @objc public var x: Swift.Float
  @objc public var y: Swift.Float
  @objc public class func createInstance() -> AcuantHGLiveness.LiveFaceRectDetail
  @objc public func mapCGRect(rect: CoreFoundation.CGRect)
  @objc public func toCGRect() -> CoreFoundation.CGRect
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class LiveFaceDetails : ObjectiveC.NSObject {
  @objc public var isLiveFace: Swift.Bool
  @objc public var faceRect: AcuantHGLiveness.LiveFaceRectDetail?
  @objc public var cleanAperture: AcuantHGLiveness.LiveFaceRectDetail?
  @objc public var image: UIKit.UIImage?
  @objc public var error: AcuantCommon.AcuantError?
  @objc public class func createInstance() -> AcuantHGLiveness.LiveFaceDetails
  @objc override dynamic public init()
  @objc deinit
}
@objc @objcMembers public class HGLivenessResult : ObjectiveC.NSObject {
  @objc final public let image: UIKit.UIImage
  @objc final public let jpegData: Foundation.Data
  @objc public init(image: UIKit.UIImage, jpegData: Foundation.Data)
  @objc deinit
}
@objc public protocol AcuantHGLiveFaceCaptureDelegate {
  @objc func liveFaceDetailsCaptured(liveFaceDetails: AcuantHGLiveness.LiveFaceDetails?, faceType: AcuantHGLiveness.AcuantFaceType)
}
extension AcuantHGLiveness.AcuantFaceType : Swift.Equatable {}
extension AcuantHGLiveness.AcuantFaceType : Swift.Hashable {}
extension AcuantHGLiveness.AcuantFaceType : Swift.RawRepresentable {}
