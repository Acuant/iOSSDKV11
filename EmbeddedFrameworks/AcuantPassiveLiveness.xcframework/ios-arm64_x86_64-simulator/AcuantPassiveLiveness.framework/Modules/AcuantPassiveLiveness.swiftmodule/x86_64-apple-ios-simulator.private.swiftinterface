// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8 (swiftlang-5.8.0.124.2 clang-1403.0.22.11.100)
// swift-module-flags: -target x86_64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name AcuantPassiveLiveness
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AcuantCommon
@_exported import AcuantPassiveLiveness
import CoreImage
import Foundation
import Swift
import UIKit
import _Concurrency
import _StringProcessing
public enum AcuantLivenessAssessment : Swift.String, Swift.Decodable {
  case error
  case poorQuality
  case live
  case notLive
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public class AcuantLivenessRequest {
  final public let jpegData: Foundation.Data
  public init(jpegData: Foundation.Data)
  @objc deinit
}
public class AcuantLivenessError : Swift.Decodable {
  final public let errorCode: AcuantPassiveLiveness.AcuantLivenessErrorCode?
  final public let description: Swift.String?
  public init(errorCode: AcuantPassiveLiveness.AcuantLivenessErrorCode? = nil, description: Swift.String? = nil)
  @objc deinit
  required public init(from decoder: any Swift.Decoder) throws
}
@_hasMissingDesignatedInitializers public class PassiveLiveness {
  public class func postLiveness(request: AcuantPassiveLiveness.AcuantLivenessRequest, callback: @escaping (AcuantPassiveLiveness.AcuantLivenessResponse?, AcuantPassiveLiveness.AcuantLivenessError?) -> ())
  @objc deinit
}
public class AcuantLivenessResponse : Swift.Decodable {
  final public let score: Swift.Int
  final public let result: AcuantPassiveLiveness.AcuantLivenessAssessment
  required public init(from decoder: any Swift.Decoder) throws
  @objc deinit
}
public enum AcuantLivenessErrorCode : Swift.String, Swift.Decodable {
  case unknown
  case faceTooClose
  case faceNotFound
  case faceTooSmall
  case faceAngleTooLarge
  case failedToReadImage
  case invalidRequest
  case invalidRequestSettings
  case unauthorized
  case notFound
  case internalError
  case invalidJson
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
extension AcuantPassiveLiveness.AcuantLivenessAssessment : Swift.Equatable {}
extension AcuantPassiveLiveness.AcuantLivenessAssessment : Swift.Hashable {}
extension AcuantPassiveLiveness.AcuantLivenessAssessment : Swift.RawRepresentable {}
extension AcuantPassiveLiveness.AcuantLivenessErrorCode : Swift.Equatable {}
extension AcuantPassiveLiveness.AcuantLivenessErrorCode : Swift.Hashable {}
extension AcuantPassiveLiveness.AcuantLivenessErrorCode : Swift.RawRepresentable {}
