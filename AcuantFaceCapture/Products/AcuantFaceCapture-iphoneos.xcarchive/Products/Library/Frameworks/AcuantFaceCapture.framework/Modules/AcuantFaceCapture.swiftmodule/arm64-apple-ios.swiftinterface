// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8.1 (swiftlang-5.8.0.124.5 clang-1403.0.22.11.100)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name AcuantFaceCapture
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFoundation
@_exported import AcuantFaceCapture
import AcuantImagePreparation
import Foundation
import Swift
import UIKit
import _Concurrency
import _StringProcessing
@objc @objcMembers public class AcuantFaceCaptureSession : AVFoundation.AVCaptureSession {
  @objc public init(captureDevice: AVFoundation.AVCaptureDevice, callback: @escaping (AcuantFaceCapture.AcuantFaceDetails) -> ())
  @objc public func start(completion: (() -> Swift.Void)? = nil)
  @objc public func stop()
  @objc public func resume()
  @objc deinit
}
extension AcuantFaceCapture.AcuantFaceCaptureSession : AVFoundation.AVCaptureMetadataOutputObjectsDelegate {
  @objc dynamic public func metadataOutput(_ output: AVFoundation.AVCaptureMetadataOutput, didOutput metadataObjects: [AVFoundation.AVMetadataObject], from connection: AVFoundation.AVCaptureConnection)
}
extension AcuantFaceCapture.AcuantFaceCaptureSession : AVFoundation.AVCaptureVideoDataOutputSampleBufferDelegate {
  @objc dynamic public func captureOutput(_ output: AVFoundation.AVCaptureOutput, didOutput sampleBuffer: CoreMedia.CMSampleBuffer, from connection: AVFoundation.AVCaptureConnection)
}
@objc @objcMembers public class FaceCameraOptions : ObjectiveC.NSObject {
  @objc final public let totalCaptureTime: Swift.Int
  @objc final public let bracketColorDefault: CoreGraphics.CGColor
  @objc final public let bracketColorError: CoreGraphics.CGColor
  @objc final public let bracketColorGood: CoreGraphics.CGColor
  @objc final public let fontColorDefault: CoreGraphics.CGColor
  @objc final public let fontColorError: CoreGraphics.CGColor
  @objc final public let fontColorGood: CoreGraphics.CGColor
  @objc final public let defaultImageUrl: Swift.String
  @objc final public let showOval: Swift.Bool
  @objc public init(totalCaptureTime: Swift.Int = 2, bracketColorDefault: CoreGraphics.CGColor = UIColor.black.cgColor, bracketColorError: CoreGraphics.CGColor = UIColor.red.cgColor, bracketColorGood: CoreGraphics.CGColor = UIColor.green.cgColor, fontColorDefault: CoreGraphics.CGColor = UIColor.white.cgColor, fontColorError: CoreGraphics.CGColor = UIColor.red.cgColor, fontColorGood: CoreGraphics.CGColor = UIColor.green.cgColor, defaultImageUrl: Swift.String = "acuant_default_face_image.png", showOval: Swift.Bool = false)
  @objc deinit
}
@objc @objcMembers public class AcuantFaceDetails : ObjectiveC.NSObject {
  @objc final public let image: UIKit.UIImage?
  @objc final public let state: AcuantFaceCapture.AcuantFaceState
  final public let faceRect: CoreFoundation.CGRect?
  final public let cleanAperture: CoreFoundation.CGRect?
  public init(state: AcuantFaceCapture.AcuantFaceState, image: UIKit.UIImage? = nil, cleanAperture: CoreFoundation.CGRect? = nil, faceRect: CoreFoundation.CGRect? = nil)
  @objc deinit
}
@objc public enum AcuantFaceState : Swift.Int {
  case NONE
  case FACE_TOO_CLOSE
  case FACE_MOVED
  case FACE_TOO_FAR
  case FACE_GOOD_DISTANCE
  case FACE_NOT_IN_FRAME
  case FACE_HAS_ANGLE
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class FaceCaptureController : UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) public var callback: ((AcuantFaceCapture.FaceCaptureResult?) -> Swift.Void)?
  @_Concurrency.MainActor(unsafe) public var options: AcuantFaceCapture.FaceCameraOptions?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewWillAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var prefersStatusBarHidden: Swift.Bool {
    @objc get
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewWillDisappear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewWillTransition(to size: CoreFoundation.CGSize, with coordinator: any UIKit.UIViewControllerTransitionCoordinator)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLayoutSubviews()
  @_Concurrency.MainActor(unsafe) public func setLookFromState(state: AcuantFaceCapture.AcuantFaceState)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_hasMissingDesignatedInitializers @objcMembers public class FaceCaptureResult : ObjectiveC.NSObject {
  @objc final public let image: UIKit.UIImage
  @objc final public let jpegData: Foundation.Data
  @objc deinit
}
extension AcuantFaceCapture.AcuantFaceState : Swift.Equatable {}
extension AcuantFaceCapture.AcuantFaceState : Swift.Hashable {}
extension AcuantFaceCapture.AcuantFaceState : Swift.RawRepresentable {}
